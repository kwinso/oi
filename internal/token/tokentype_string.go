// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[EOF-1]
	_ = x[NEWLINE-2]
	_ = x[IDENT-3]
	_ = x[INT-4]
	_ = x[FLOAT-5]
	_ = x[TRUE-6]
	_ = x[FALSE-7]
	_ = x[STRING-8]
	_ = x[COMMA-9]
	_ = x[DOT-10]
	_ = x[SEMICOLON-11]
	_ = x[LPAREN-12]
	_ = x[RPAREN-13]
	_ = x[LBRACE-14]
	_ = x[RBRACE-15]
	_ = x[ASSIGN-16]
	_ = x[PLUS-17]
	_ = x[MINUS-18]
	_ = x[MULTIPLY-19]
	_ = x[DIVIDE-20]
	_ = x[POWER-21]
	_ = x[AND-22]
	_ = x[OR-23]
	_ = x[NOT-24]
	_ = x[EQ-25]
	_ = x[NEQ-26]
	_ = x[LT-27]
	_ = x[GT-28]
	_ = x[LTE-29]
	_ = x[GTE-30]
	_ = x[LET-31]
	_ = x[FN-32]
	_ = x[RETURN-33]
	_ = x[IF-34]
	_ = x[ELSE-35]
	_ = x[PIPE_CTX-36]
	_ = x[PIPE_FN-37]
	_ = x[PIPE_OP-38]
}

const _TokenType_name = "ILLEGALEOFNEWLINEIDENTINTFLOATTRUEFALSESTRINGCOMMADOTSEMICOLONLPARENRPARENLBRACERBRACEASSIGNPLUSMINUSMULTIPLYDIVIDEPOWERANDORNOTEQNEQLTGTLTEGTELETFNRETURNIFELSEPIPE_CTXPIPE_FNPIPE_OP"

var _TokenType_index = [...]uint8{0, 7, 10, 17, 22, 25, 30, 34, 39, 45, 50, 53, 62, 68, 74, 80, 86, 92, 96, 101, 109, 115, 120, 123, 125, 128, 130, 133, 135, 137, 140, 143, 146, 148, 154, 156, 160, 168, 175, 182}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
