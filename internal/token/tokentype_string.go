// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[EOF-1]
	_ = x[NEWLINE-2]
	_ = x[IDENT-3]
	_ = x[INT-4]
	_ = x[FLOAT-5]
	_ = x[TRUE-6]
	_ = x[FALSE-7]
	_ = x[STRING-8]
	_ = x[COMMA-9]
	_ = x[LPAREN-10]
	_ = x[RPAREN-11]
	_ = x[LBRACE-12]
	_ = x[RBRACE-13]
	_ = x[ASSIGN-14]
	_ = x[PLUS-15]
	_ = x[MINUS-16]
	_ = x[MULTIPLY-17]
	_ = x[DIVIDE-18]
	_ = x[POWER-19]
	_ = x[AND-20]
	_ = x[OR-21]
	_ = x[NOT-22]
	_ = x[EQ-23]
	_ = x[NEQ-24]
	_ = x[LT-25]
	_ = x[GT-26]
	_ = x[LTE-27]
	_ = x[GTE-28]
	_ = x[LET-29]
	_ = x[FN-30]
	_ = x[RETURN-31]
	_ = x[IF-32]
	_ = x[ELSE-33]
	_ = x[PIPE_CTX-34]
	_ = x[PIPE_FN-35]
	_ = x[PIPE_OP-36]
}

const _TokenType_name = "ILLEGALEOFNEWLINEIDENTINTFLOATTRUEFALSESTRINGCOMMALPARENRPARENLBRACERBRACEASSIGNPLUSMINUSMULTIPLYDIVIDEPOWERANDORNOTEQNEQLTGTLTEGTELETFNRETURNIFELSEPIPE_CTXPIPE_FNPIPE_OP"

var _TokenType_index = [...]uint8{0, 7, 10, 17, 22, 25, 30, 34, 39, 45, 50, 56, 62, 68, 74, 80, 84, 89, 97, 103, 108, 111, 113, 116, 118, 121, 123, 125, 128, 131, 134, 136, 142, 144, 148, 156, 163, 170}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
